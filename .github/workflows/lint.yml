name: ESLint/Prettier

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  eslint:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend

      - name: Run Prettier
        run: npx prettier --write .
        working-directory: ./frontend

      - name: Commit and push changes if any (Linux and macOS)
        if: runner.os != 'Windows'
        working-directory: ./frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branchName=$(git rev-parse --abbrev-ref HEAD)
          if [ "$branchName" = "HEAD" ]; then
            branchName="${{ github.head_ref }}"
            git checkout $branchName
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "style: apply ESLint and Prettier formatting" || echo "No changes to commit"
          git pull --rebase origin $branchName
          git push origin $branchName

      - name: Commit and push changes if any (Windows)
        if: runner.os == 'Windows'
        working-directory: ./frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $branchName = $(git rev-parse --abbrev-ref HEAD)
          if ($branchName -eq 'HEAD') {
            $branchName = '${{ github.head_ref }}'
            git checkout $branchName
          }
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'style: apply ESLint and Prettier formatting' || echo 'No changes to commit'
          git pull --rebase origin $branchName
          git push origin $branchName

      - name: Fail if there are uncommitted changes (Linux and macOS)
        if: runner.os != 'Windows'
        working-directory: ./frontend
        run: |
          git diff-index --quiet HEAD || exit 1

      - name: Fail if there are uncommitted changes (Windows)
        if: runner.os == 'Windows'
        working-directory: ./frontend
        run: |
          git diff-index --quiet HEAD || exit 1
