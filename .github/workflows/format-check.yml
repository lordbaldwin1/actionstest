name: Format Backend

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  google-java-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check if google-java-format.jar exists
        id: check-format-jar
        run: |
          if [ -f "./backend/google-java-format.jar" ]; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Download google-java-format if it does not exist
        if: env.exists == 'false'
        run: |
          curl -L -o google-java-format.jar "https://github.com/google/google-java-format/releases/download/v1.11.0/google-java-format-1.11.0-all-deps.jar"
          mv google-java-format.jar ./backend/

      - name: List files in backend directory
        working-directory: ./backend
        run: ls -l

      - name: Format Java files
        working-directory: ./backend
        run: |
          java --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
               --add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
               --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
               --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
               --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
               --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
               -jar google-java-format.jar --replace $(find . -name '*.java')

      - name: Commit and push changes if any
        working-directory: ./backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branchName=$(git rev-parse --abbrev-ref HEAD)
          if [ "$branchName" = "HEAD" ]; then
            branchName="${{ github.head_ref }}"
            git checkout $branchName
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "style: apply Google Java format" || echo "No changes to commit"
          git pull --rebase origin $branchName
          git push origin $branchName

      - name: Fail if there are uncommitted changes
        working-directory: ./backend
        run: |
          git diff-index --quiet HEAD || exit 1
